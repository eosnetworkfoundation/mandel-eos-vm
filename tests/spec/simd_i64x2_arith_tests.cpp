// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_0_wasm>", "[simd_i64x2_arith_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(0u,0u), make_v128_i64(0u,0u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(0u,0u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(2u,2u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(0u,0u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(18446744073709551614u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(4611686018427387903u,4611686018427387903u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(4611686018427387904u,4611686018427387904u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(13835058055282163713u,13835058055282163713u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(13835058055282163711u,13835058055282163711u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775805u,9223372036854775805u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775806u,9223372036854775806u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775806u,9223372036854775806u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775810u,9223372036854775810u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775809u,9223372036854775809u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(18446744073709551614u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775809u,9223372036854775809u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(0u,0u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(18446744073709551614u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(9223372036854775806u,9223372036854775806u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(18446744073709551614u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(4611686018427387903u,4611686018427387903u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(4611686018427387904u,4611686018427387904u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(13835058055282163713u,13835058055282163713u), make_v128_i64(18158513697289404417u,18158513697289404417u))->to_v128() == make_v128_i64(13546827678862016514u,13546827678862016514u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(18158513697557839872u,18158513697557839872u))->to_v128() == make_v128_i64(13546827679130451968u,13546827679130451968u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(18158513697557839871u,18158513697557839871u))->to_v128() == make_v128_i64(13546827679130451967u,13546827679130451967u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(576460752303423487u,576460752303423487u))->to_v128() == make_v128_i64(9799832789158199294u,9799832789158199294u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(18446744073709551614u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i8(0u,0u,0u,0u,0u,0u,0u,128u,0u,0u,0u,0u,0u,0u,0u,128u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i16(0u,0u,0u,32768u,0u,0u,0u,32768u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i32(0u,2147483648u,0u,2147483648u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(0u,0u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(4607182418800017408u,4607182418800017408u))->to_v128() == make_v128_i64(13830554455654793216u,13830554455654793216u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(13830554455654793216u,13830554455654793216u))->to_v128() == make_v128_i64(4607182418800017408u,4607182418800017408u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_f64(9218868437227405312u,9218868437227405312u))->to_v128() == make_v128_i64(9218868437227405313u,9218868437227405313u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_f64(18442240474082181120u,18442240474082181120u))->to_v128() == make_v128_i64(18442240474082181121u,18442240474082181121u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1u,1u), make_v128_f64(9221120237041090560u,9221120237041090560u))->to_v128() == make_v128_i64(9221120237041090561u,9221120237041090561u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(0u,1u), make_v128_i64(0u,18446744073709551615u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(0u,1u), make_v128_i64(0u,2u))->to_v128() == make_v128_i64(0u,3u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1234567890123456789u,1234567890123456789u), make_v128_i64(1234567890123456789u,1234567890123456789u))->to_v128() == make_v128_i64(2469135780246913578u,2469135780246913578u));
   CHECK(bkend.call_with_return("env", "i64x2.add", make_v128_i64(1311768467294899695u,1311768467294899695u), make_v128_i64(10424652189165442680u,10424652189165442680u))->to_v128() == make_v128_i64(11736420656460342375u,11736420656460342375u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(0u,0u), make_v128_i64(0u,0u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(0u,0u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(0u,0u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(2u,2u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(4611686018427387903u,4611686018427387903u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(4611686018427387904u,4611686018427387904u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(13835058055282163713u,13835058055282163713u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(13835058055282163711u,13835058055282163711u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775805u,9223372036854775805u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775804u,9223372036854775804u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775806u,9223372036854775806u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775805u,9223372036854775805u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775810u,9223372036854775810u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775811u,9223372036854775811u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775809u,9223372036854775809u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775810u,9223372036854775810u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775809u,9223372036854775809u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(0u,0u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(18446744073709551614u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(4611686018427387903u,4611686018427387903u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(4611686018427387904u,4611686018427387904u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(13835058055282163713u,13835058055282163713u), make_v128_i64(18158513697289404417u,18158513697289404417u))->to_v128() == make_v128_i64(14123288431702310912u,14123288431702310912u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(18158513697557839872u,18158513697557839872u))->to_v128() == make_v128_i64(14123288431433875456u,14123288431433875456u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(18158513697557839871u,18158513697557839871u))->to_v128() == make_v128_i64(14123288431433875457u,14123288431433875457u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(576460752303423487u,576460752303423487u))->to_v128() == make_v128_i64(8646911284551352320u,8646911284551352320u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775806u,9223372036854775806u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(18446744073709551614u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i8(0u,0u,0u,0u,0u,0u,0u,128u,0u,0u,0u,0u,0u,0u,0u,128u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i64(2u,2u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i16(0u,0u,0u,32768u,0u,0u,0u,32768u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i64(2u,2u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i32(0u,2147483648u,0u,2147483648u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i64(2u,2u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(0u,0u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(4607182418800017408u,4607182418800017408u))->to_v128() == make_v128_i64(4616189618054758400u,4616189618054758400u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_f64(13830554455654793216u,13830554455654793216u))->to_v128() == make_v128_i64(13839561654909534208u,13839561654909534208u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_f64(9218868437227405312u,9218868437227405312u))->to_v128() == make_v128_i64(9227875636482146305u,9227875636482146305u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_f64(18442240474082181120u,18442240474082181120u))->to_v128() == make_v128_i64(4503599627370497u,4503599627370497u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(1u,1u), make_v128_f64(9221120237041090560u,9221120237041090560u))->to_v128() == make_v128_i64(9225623836668461057u,9225623836668461057u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(0u,1u), make_v128_i64(0u,18446744073709551615u))->to_v128() == make_v128_i64(0u,2u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(0u,1u), make_v128_i64(0u,2u))->to_v128() == make_v128_i64(0u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(3214567890123456789u,3214567890123456789u), make_v128_i64(1234567890123456789u,1234567890123456789u))->to_v128() == make_v128_i64(1980000000000000000u,1980000000000000000u));
   CHECK(bkend.call_with_return("env", "i64x2.sub", make_v128_i64(10424652191131583265u,10424652191131583265u), make_v128_i64(1311768467294899695u,1311768467294899695u))->to_v128() == make_v128_i64(9112883723836683570u,9112883723836683570u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(0u,0u), make_v128_i64(0u,0u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(0u,0u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(1u,1u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(0u,0u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(1u,1u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(4611686018427387903u,4611686018427387903u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(13835058055282163712u,13835058055282163712u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(4611686018427387904u,4611686018427387904u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(13835058055282163713u,13835058055282163713u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(13835058055282163712u,13835058055282163712u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(13835058055282163711u,13835058055282163711u), make_v128_i64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i64(4611686018427387904u,4611686018427387904u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775805u,9223372036854775805u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775805u,9223372036854775805u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775806u,9223372036854775806u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775806u,9223372036854775806u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775810u,9223372036854775810u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775806u,9223372036854775806u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775809u,9223372036854775809u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775809u,9223372036854775809u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(0u,0u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(4611686018427387903u,4611686018427387903u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(13835058055282163712u,13835058055282163712u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(4611686018427387904u,4611686018427387904u), make_v128_i64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(13835058055282163713u,13835058055282163713u), make_v128_i64(18158513697289404417u,18158513697289404417u))->to_v128() == make_v128_i64(13546827678862016513u,13546827678862016513u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(18158513697557839872u,18158513697557839872u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(13835058055282163712u,13835058055282163712u), make_v128_i64(18158513697557839871u,18158513697557839871u))->to_v128() == make_v128_i64(4611686018427387904u,4611686018427387904u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(576460752303423487u,576460752303423487u))->to_v128() == make_v128_i64(8646911284551352321u,8646911284551352321u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775807u,9223372036854775807u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(1u,1u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i8(2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i16(0u,0u,0u,2u,0u,0u,0u,2u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(9223372036854775808u,9223372036854775808u), make_v128_i32(0u,2u,0u,2u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(18446744073709551615u,18446744073709551615u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(2147483648u,2147483648u), make_v128_f64(0u,0u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(2147483648u,2147483648u), make_v128_f64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(2147483648u,2147483648u), make_v128_f64(4607182418800017408u,4607182418800017408u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(2147483648u,2147483648u), make_v128_f64(13830554455654793216u,13830554455654793216u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(1u,1u), make_v128_f64(9218868437227405312u,9218868437227405312u))->to_v128() == make_v128_i64(9218868437227405312u,9218868437227405312u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(1u,1u), make_v128_f64(18442240474082181120u,18442240474082181120u))->to_v128() == make_v128_i64(18442240474082181120u,18442240474082181120u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(1u,1u), make_v128_f64(9221120237041090560u,9221120237041090560u))->to_v128() == make_v128_i64(9221120237041090560u,9221120237041090560u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(0u,1u), make_v128_i64(0u,18446744073709551615u))->to_v128() == make_v128_i64(0u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(0u,1u), make_v128_i64(0u,2u))->to_v128() == make_v128_i64(0u,2u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(1234567890123456789u,1234567890123456789u), make_v128_i64(1234567890123456789u,1234567890123456789u))->to_v128() == make_v128_i64(9710478858155731897u,9710478858155731897u));
   CHECK(bkend.call_with_return("env", "i64x2.mul", make_v128_i64(1311768467294899695u,1311768467294899695u), make_v128_i64(10424652191131583265u,10424652191131583265u))->to_v128() == make_v128_i64(6930764853679626447u,6930764853679626447u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(0u,0u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(1u,1u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775806u,9223372036854775806u))->to_v128() == make_v128_i64(9223372036854775810u,9223372036854775810u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775809u,9223372036854775809u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(1u,1u))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775809u,9223372036854775809u))->to_v128() == make_v128_i64(9223372036854775807u,9223372036854775807u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775807u,9223372036854775807u))->to_v128() == make_v128_i64(9223372036854775809u,9223372036854775809u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "i64x2.neg", make_v128_i64(18446744073709551615u,18446744073709551615u))->to_v128() == make_v128_i64(1u,1u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_1_wasm>", "[simd_i64x2_arith_1_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.1.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_10_wasm>", "[simd_i64x2_arith_10_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.10.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_11_wasm>", "[simd_i64x2_arith_11_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.11.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_12_wasm>", "[simd_i64x2_arith_12_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.12.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "add-sub", make_v128_i64(0u,1u), make_v128_i64(0u,2u), make_v128_i64(0u,2u))->to_v128() == make_v128_i64(0u,1u));
   CHECK(bkend.call_with_return("env", "mul-add", make_v128_i64(0u,1u), make_v128_i64(0u,1u), make_v128_i64(2u,2u))->to_v128() == make_v128_i64(0u,4u));
   CHECK(bkend.call_with_return("env", "mul-sub", make_v128_i64(0u,2u), make_v128_i64(0u,1u), make_v128_i64(0u,1u))->to_v128() == make_v128_i64(0u,1u));
   CHECK(bkend.call_with_return("env", "sub-add", make_v128_i64(0u,1u), make_v128_i64(0u,2u), make_v128_i64(0u,2u))->to_v128() == make_v128_i64(0u,1u));
   CHECK(bkend.call_with_return("env", "add-neg", make_v128_i64(0u,1u), make_v128_i64(0u,1u))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "mul-neg", make_v128_i64(0u,1u), make_v128_i64(2u,2u))->to_v128() == make_v128_i64(0u,18446744073709551614u));
   CHECK(bkend.call_with_return("env", "sub-neg", make_v128_i64(0u,1u), make_v128_i64(0u,1u))->to_v128() == make_v128_i64(0u,18446744073709551614u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_2_wasm>", "[simd_i64x2_arith_2_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.2.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_3_wasm>", "[simd_i64x2_arith_3_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.3.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_4_wasm>", "[simd_i64x2_arith_4_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.4.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_5_wasm>", "[simd_i64x2_arith_5_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.5.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_6_wasm>", "[simd_i64x2_arith_6_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.6.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_7_wasm>", "[simd_i64x2_arith_7_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.7.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_8_wasm>", "[simd_i64x2_arith_8_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.8.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_arith_9_wasm>", "[simd_i64x2_arith_9_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_arith.9.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

