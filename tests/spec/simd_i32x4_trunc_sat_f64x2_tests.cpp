// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_0_wasm>", "[simd_i32x4_trunc_sat_f64x2_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(0u,0u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4609434218613702656u,4609434218613702656u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13832806255468478464u,13832806255468478464u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4611235658464650854u,4611235658464650854u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i32(2u,2u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13834607695319426662u,13834607695319426662u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i32(4294967294u,4294967294u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4746794006711631872u,4746794006711631872u))->to_v128() == make_v128_i32(2147483520u,2147483520u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13970166043566407680u,13970166043566407680u))->to_v128() == make_v128_i32(2147483776u,2147483776u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4746794007248502784u,4746794007248502784u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13970166044103278592u,13970166044103278592u))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606871678976u,4751297606871678976u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13974669643726454784u,13974669643726454784u))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4746794007244308480u,4746794007244308480u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13970166044099084288u,13970166044099084288u))->to_v128() == make_v128_i32(2147483649u,2147483649u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606871678976u,4751297606871678976u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606873776128u,4751297606873776128u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606875873280u,4751297606875873280u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(3936146074321813504u,3936146074321813504u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13159518111176589312u,13159518111176589312u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4039728865751334912u,4039728865751334912u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13263100902606110720u,13263100902606110720u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4602678819172646912u,4602678819172646912u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13826050856027422720u,13826050856027422720u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4607182418800017408u,4607182418800017408u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13830554455654793216u,13830554455654793216u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4607632778870128640u,4607632778870128640u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13831004815724904448u,13831004815724904448u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4618760256376274944u,4618760256376274944u))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13842132293231050752u,13842132293231050752u))->to_v128() == make_v128_i32(4294967290u,4294967290u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(5183643170566569984u,5183643170566569984u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(14407015207421345792u,14407015207421345792u))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4606281698659794944u,4606281698659794944u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13829653735514570752u,13829653735514570752u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4607182418263146496u,4607182418263146496u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13830554455117922304u,13830554455117922304u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4618760256376274944u,4618760256376274944u))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13842132293231050752u,13842132293231050752u))->to_v128() == make_v128_i32(4294967290u,4294967290u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(5183643170566569984u,5183643170566569984u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(14407015207421345792u,14407015207421345792u))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9218868437227405312u,9218868437227405312u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(18442240474082181120u,18442240474082181120u))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9221120237041090560u,9221120237041090560u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(18444492273895866368u,18444492273895866368u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9218868437231879236u,9218868437231879236u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(18442240474086655044u,18442240474086655044u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4631107791820423168u,4631107791820423168u))->to_v128() == make_v128_i32(42u,42u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13854479828675198976u,13854479828675198976u))->to_v128() == make_v128_i32(4294967254u,4294967254u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4728057454548484096u,4728057454548484096u))->to_v128() == make_v128_i32(123456792u,123456792u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4742964961033060352u,4742964961033060352u))->to_v128() == make_v128_i32(1234567890u,1234567890u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(0u,0u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4609434218613702656u,4609434218613702656u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13832806255468478464u,13832806255468478464u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4611235658464650854u,4611235658464650854u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4611686018427387904u,4611686018427387904u))->to_v128() == make_v128_i32(2u,2u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13834607695319426662u,13834607695319426662u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13835058055282163712u,13835058055282163712u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4746794006711631872u,4746794006711631872u))->to_v128() == make_v128_i32(2147483520u,2147483520u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13970166043566407680u,13970166043566407680u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4746794007248502784u,4746794007248502784u))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13970166044103278592u,13970166044103278592u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606871678976u,4751297606871678976u))->to_v128() == make_v128_i32(4294967294u,4294967294u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13974669643726454784u,13974669643726454784u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4746794007244308480u,4746794007244308480u))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13970166044099084288u,13970166044099084288u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606871678976u,4751297606871678976u))->to_v128() == make_v128_i32(4294967294u,4294967294u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606873776128u,4751297606873776128u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606875873280u,4751297606875873280u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(3936146074321813504u,3936146074321813504u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13159518111176589312u,13159518111176589312u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4039728865751334912u,4039728865751334912u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13263100902606110720u,13263100902606110720u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4602678819172646912u,4602678819172646912u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13826050856027422720u,13826050856027422720u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4607182418800017408u,4607182418800017408u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13830554455654793216u,13830554455654793216u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4607632778870128640u,4607632778870128640u))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13831004815724904448u,13831004815724904448u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4618760256376274944u,4618760256376274944u))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13842132293231050752u,13842132293231050752u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(5183643170566569984u,5183643170566569984u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(14407015207421345792u,14407015207421345792u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4606281698659794944u,4606281698659794944u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13829653735514570752u,13829653735514570752u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4607182418263146496u,4607182418263146496u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13830554455117922304u,13830554455117922304u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4618760256376274944u,4618760256376274944u))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13842132293231050752u,13842132293231050752u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(5183643170566569984u,5183643170566569984u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(14407015207421345792u,14407015207421345792u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9218868437227405312u,9218868437227405312u))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(18442240474082181120u,18442240474082181120u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9221120237041090560u,9221120237041090560u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(18444492273895866368u,18444492273895866368u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9218868437231879236u,9218868437231879236u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(18442240474086655044u,18442240474086655044u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4631107791820423168u,4631107791820423168u))->to_v128() == make_v128_i32(42u,42u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13854479828675198976u,13854479828675198976u))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4728057454548484096u,4728057454548484096u))->to_v128() == make_v128_i32(123456792u,123456792u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4742964961033060352u,4742964961033060352u))->to_v128() == make_v128_i32(1234567890u,1234567890u,0u,0u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_1_wasm>", "[simd_i32x4_trunc_sat_f64x2_1_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.1.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_2_wasm>", "[simd_i32x4_trunc_sat_f64x2_2_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.2.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_3_wasm>", "[simd_i32x4_trunc_sat_f64x2_3_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.3.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_4_wasm>", "[simd_i32x4_trunc_sat_f64x2_4_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.4.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

