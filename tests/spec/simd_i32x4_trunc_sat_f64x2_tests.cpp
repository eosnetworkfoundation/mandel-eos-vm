// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_0_wasm>", "[simd_i32x4_trunc_sat_f64x2_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(0,0))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9223372036854775808,9223372036854775808))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4609434218613702656,4609434218613702656))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13832806255468478464,13832806255468478464))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4611235658464650854,4611235658464650854))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4611686018427387904,4611686018427387904))->to_v128() == make_v128_i32(2u,2u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13834607695319426662,13834607695319426662))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13835058055282163712,13835058055282163712))->to_v128() == make_v128_i32(4294967294u,4294967294u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4746794006711631872,4746794006711631872))->to_v128() == make_v128_i32(2147483520u,2147483520u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13970166043566407680,13970166043566407680))->to_v128() == make_v128_i32(2147483776u,2147483776u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4746794007248502784,4746794007248502784))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13970166044103278592,13970166044103278592))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606871678976,4751297606871678976))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13974669643726454784,13974669643726454784))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4746794007244308480,4746794007244308480))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13970166044099084288,13970166044099084288))->to_v128() == make_v128_i32(2147483649u,2147483649u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606871678976,4751297606871678976))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606873776128,4751297606873776128))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4751297606875873280,4751297606875873280))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(3936146074321813504,3936146074321813504))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13159518111176589312,13159518111176589312))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4039728865751334912,4039728865751334912))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13263100902606110720,13263100902606110720))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4602678819172646912,4602678819172646912))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13826050856027422720,13826050856027422720))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4607182418800017408,4607182418800017408))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13830554455654793216,13830554455654793216))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4607632778870128640,4607632778870128640))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13831004815724904448,13831004815724904448))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4618760256376274944,4618760256376274944))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13842132293231050752,13842132293231050752))->to_v128() == make_v128_i32(4294967290u,4294967290u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(5183643170566569984,5183643170566569984))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(14407015207421345792,14407015207421345792))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4606281698659794944,4606281698659794944))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13829653735514570752,13829653735514570752))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4607182418263146496,4607182418263146496))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13830554455117922304,13830554455117922304))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4618760256376274944,4618760256376274944))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13842132293231050752,13842132293231050752))->to_v128() == make_v128_i32(4294967290u,4294967290u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(5183643170566569984,5183643170566569984))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(14407015207421345792,14407015207421345792))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9218868437227405312,9218868437227405312))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(18442240474082181120,18442240474082181120))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9221120237041090560,9221120237041090560))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(18444492273895866368,18444492273895866368))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(9218868437231879236,9218868437231879236))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(18442240474086655044,18442240474086655044))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4631107791820423168,4631107791820423168))->to_v128() == make_v128_i32(42u,42u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(13854479828675198976,13854479828675198976))->to_v128() == make_v128_i32(4294967254u,4294967254u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4728057454548484096,4728057454548484096))->to_v128() == make_v128_i32(123456792u,123456792u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_s_zero", make_v128_f64(4742964961033060352,4742964961033060352))->to_v128() == make_v128_i32(1234567890u,1234567890u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(0,0))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9223372036854775808,9223372036854775808))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4609434218613702656,4609434218613702656))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13832806255468478464,13832806255468478464))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4611235658464650854,4611235658464650854))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4611686018427387904,4611686018427387904))->to_v128() == make_v128_i32(2u,2u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13834607695319426662,13834607695319426662))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13835058055282163712,13835058055282163712))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4746794006711631872,4746794006711631872))->to_v128() == make_v128_i32(2147483520u,2147483520u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13970166043566407680,13970166043566407680))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4746794007248502784,4746794007248502784))->to_v128() == make_v128_i32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13970166044103278592,13970166044103278592))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606871678976,4751297606871678976))->to_v128() == make_v128_i32(4294967294u,4294967294u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13974669643726454784,13974669643726454784))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4746794007244308480,4746794007244308480))->to_v128() == make_v128_i32(2147483647u,2147483647u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13970166044099084288,13970166044099084288))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606871678976,4751297606871678976))->to_v128() == make_v128_i32(4294967294u,4294967294u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606873776128,4751297606873776128))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4751297606875873280,4751297606875873280))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(3936146074321813504,3936146074321813504))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13159518111176589312,13159518111176589312))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4039728865751334912,4039728865751334912))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13263100902606110720,13263100902606110720))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4602678819172646912,4602678819172646912))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13826050856027422720,13826050856027422720))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4607182418800017408,4607182418800017408))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13830554455654793216,13830554455654793216))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4607632778870128640,4607632778870128640))->to_v128() == make_v128_i32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13831004815724904448,13831004815724904448))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4618760256376274944,4618760256376274944))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13842132293231050752,13842132293231050752))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(5183643170566569984,5183643170566569984))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(14407015207421345792,14407015207421345792))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4606281698659794944,4606281698659794944))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13829653735514570752,13829653735514570752))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4607182418263146496,4607182418263146496))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13830554455117922304,13830554455117922304))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4618760256376274944,4618760256376274944))->to_v128() == make_v128_i32(6u,6u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13842132293231050752,13842132293231050752))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(5183643170566569984,5183643170566569984))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(14407015207421345792,14407015207421345792))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9218868437227405312,9218868437227405312))->to_v128() == make_v128_i32(4294967295u,4294967295u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(18442240474082181120,18442240474082181120))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9221120237041090560,9221120237041090560))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(18444492273895866368,18444492273895866368))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(9218868437231879236,9218868437231879236))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(18442240474086655044,18442240474086655044))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4631107791820423168,4631107791820423168))->to_v128() == make_v128_i32(42u,42u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(13854479828675198976,13854479828675198976))->to_v128() == make_v128_i32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4728057454548484096,4728057454548484096))->to_v128() == make_v128_i32(123456792u,123456792u,0u,0u));
   CHECK(bkend.call_with_return("env", "i32x4.trunc_sat_f64x2_u_zero", make_v128_f64(4742964961033060352,4742964961033060352))->to_v128() == make_v128_i32(1234567890u,1234567890u,0u,0u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_1_wasm>", "[simd_i32x4_trunc_sat_f64x2_1_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.1.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_2_wasm>", "[simd_i32x4_trunc_sat_f64x2_2_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.2.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_3_wasm>", "[simd_i32x4_trunc_sat_f64x2_3_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.3.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i32x4_trunc_sat_f64x2_4_wasm>", "[simd_i32x4_trunc_sat_f64x2_4_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i32x4_trunc_sat_f64x2.4.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

