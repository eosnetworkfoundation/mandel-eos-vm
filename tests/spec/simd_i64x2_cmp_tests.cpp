// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_0_wasm>", "[simd_i64x2_cmp_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(17361641481138401520,17361641481138401520), make_v128_i64(17361641481138401520,17361641481138401520))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(1085102592571150095,1085102592571150095), make_v128_i64(1085102592571150095,1085102592571150095))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(50462976,286263556), make_v128_i64(50462976,286263556))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(1152921504606846975,1152921504606846975))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i64(1,1), make_v128_i64(2,2))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i64(17361641481138401520,17361641481138401520), make_v128_i64(17361641481138401520,17361641481138401520))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i64(1085102592571150095,1085102592571150095), make_v128_i64(1085102592571150095,1085102592571150095))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i64(50462976,286263556), make_v128_i64(50462976,286263556))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(17361641481138401520,17361641481138401520), make_v128_i64(17361641481138401520,17361641481138401520))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(1085102592571150095,1085102592571150095), make_v128_i64(1085102592571150095,1085102592571150095))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(216736831865096452,1876604746445072923), make_v128_i64(216736831865096452,1876604746445072923))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(9476278952713518845,9151878496576798080), make_v128_i64(9476278952713518845,9151878496576798080))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(9223372036854775809,18446744073709551615), make_v128_i64(9223372036854775809,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(13862079653046386688,13862009284302209024), make_v128_f64(13862079653046386688,13862009284302209024))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i64(4607182418800017408,4638637247447433216), make_v128_f64(4607182418800017408,4638637247447433216))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(17361641481138401520,17361641481138401520), make_v128_i64(17361641481138401520,17361641481138401520))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(1085102592571150095,1085102592571150095), make_v128_i64(1085102592571150095,1085102592571150095))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(216736831865096452,1876604746445072923), make_v128_i64(216736831865096452,1876604746445072923))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(9476278952713518845,9151878496576798080), make_v128_i64(9476278952713518845,9151878496576798080))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(0,0), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,0u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(9223372036854775809,18446744073709551615), make_v128_i64(9223372036854775809,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(13862079653046386688,13862009284302209024), make_v128_f64(13862079653046386688,13862009284302209024))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i64(4607182418800017408,4638637247447433216), make_v128_f64(4607182418800017408,4638637247447433216))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(17361641481138401520,17361641481138401520), make_v128_i64(17361641481138401520,17361641481138401520))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(1085102592571150095,1085102592571150095), make_v128_i64(1085102592571150095,1085102592571150095))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(216736831865096452,1876604746445072923), make_v128_i64(216736831865096452,1876604746445072923))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(9476278952713518845,9151878496576798080), make_v128_i64(9476278952713518845,9151878496576798080))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(9223372036854775809,18446744073709551615), make_v128_i64(9223372036854775809,18446744073709551615))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(13862079653046386688,13862009284302209024), make_v128_f64(13862079653046386688,13862009284302209024))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i64(4607182418800017408,4638637247447433216), make_v128_f64(4607182418800017408,4638637247447433216))->to_v128() == make_v128_i64(0u,0u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(17361641481138401520,17361641481138401520), make_v128_i64(17361641481138401520,17361641481138401520))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(1085102592571150095,1085102592571150095), make_v128_i64(1085102592571150095,1085102592571150095))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(216736831865096452,1876604746445072923), make_v128_i64(216736831865096452,1876604746445072923))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(9259542123273814144,9259542123273814144), make_v128_i64(9259542123273814144,9259542123273814144))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(9476278952713518845,9151878496576798080), make_v128_i64(9476278952713518845,9151878496576798080))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(0u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(0,0), make_v128_i64(0,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,18446744073709551615), make_v128_i64(18446744073709551615,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(18446744073709551615,0), make_v128_i64(18446744073709551615,0))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(0,18446744073709551615), make_v128_i64(0,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(9223372036854775809,18446744073709551615), make_v128_i64(9223372036854775809,18446744073709551615))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(13862079653046386688,13862009284302209024), make_v128_f64(13862079653046386688,13862009284302209024))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i64(4607182418800017408,4638637247447433216), make_v128_f64(4607182418800017408,4638637247447433216))->to_v128() == make_v128_i64(18446744073709551615u,18446744073709551615u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_1_wasm>", "[simd_i64x2_cmp_1_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.1.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_10_wasm>", "[simd_i64x2_cmp_10_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.10.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_2_wasm>", "[simd_i64x2_cmp_2_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.2.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_3_wasm>", "[simd_i64x2_cmp_3_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.3.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_4_wasm>", "[simd_i64x2_cmp_4_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.4.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_5_wasm>", "[simd_i64x2_cmp_5_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.5.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_6_wasm>", "[simd_i64x2_cmp_6_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.6.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_7_wasm>", "[simd_i64x2_cmp_7_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.7.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_8_wasm>", "[simd_i64x2_cmp_8_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.8.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i64x2_cmp_9_wasm>", "[simd_i64x2_cmp_9_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i64x2_cmp.9.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

