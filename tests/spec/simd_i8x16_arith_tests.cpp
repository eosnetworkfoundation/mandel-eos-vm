// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_0_wasm>", "[simd_i8x16_arith_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u), make_v128_i8(191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(32896u,32896u,32896u,32896u,32896u,32896u,32896u,32896u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i32(2155905152u,2155905152u,2155905152u,2155905152u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(0u,0u,0u,0u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(2147483648u,2147483648u,2147483648u,2147483648u))->to_v128() == make_v128_i8(128u,128u,128u,0u,128u,128u,128u,0u,128u,128u,128u,0u,128u,128u,128u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(1065353216u,1065353216u,1065353216u,1065353216u))->to_v128() == make_v128_i8(128u,128u,0u,191u,128u,128u,0u,191u,128u,128u,0u,191u,128u,128u,0u,191u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(3212836864u,3212836864u,3212836864u,3212836864u))->to_v128() == make_v128_i8(128u,128u,0u,63u,128u,128u,0u,63u,128u,128u,0u,63u,128u,128u,0u,63u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_f32(2139095040u,2139095040u,2139095040u,2139095040u))->to_v128() == make_v128_i8(1u,1u,129u,128u,1u,1u,129u,128u,1u,1u,129u,128u,1u,1u,129u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_f32(4286578688u,4286578688u,4286578688u,4286578688u))->to_v128() == make_v128_i8(1u,1u,129u,0u,1u,1u,129u,0u,1u,1u,129u,0u,1u,1u,129u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_f32(2143289344u,2143289344u,2143289344u,2143289344u))->to_v128() == make_v128_i8(1u,1u,193u,128u,1u,1u,193u,128u,1u,1u,193u,128u,1u,1u,193u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,255u,254u,253u,252u,251u,250u,249u,248u,247u,246u,245u,244u,243u,242u,241u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.add", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,2u,4u,6u,8u,10u,12u,14u,16u,18u,20u,22u,24u,26u,28u,30u))->to_v128() == make_v128_i8(0u,3u,6u,9u,12u,15u,18u,21u,24u,27u,30u,33u,36u,39u,42u,45u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(124u,124u,124u,124u,124u,124u,124u,124u,124u,124u,124u,124u,124u,124u,124u,124u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u,125u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(131u,131u,131u,131u,131u,131u,131u,131u,131u,131u,131u,131u,131u,131u,131u,131u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u,63u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u), make_v128_i8(64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u,64u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u,193u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u), make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u,192u), make_v128_i8(191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u,191u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(32896u,32896u,32896u,32896u,32896u,32896u,32896u,32896u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i32(2155905152u,2155905152u,2155905152u,2155905152u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i8(2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(0u,0u,0u,0u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(2147483648u,2147483648u,2147483648u,2147483648u))->to_v128() == make_v128_i8(128u,128u,128u,0u,128u,128u,128u,0u,128u,128u,128u,0u,128u,128u,128u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(1065353216u,1065353216u,1065353216u,1065353216u))->to_v128() == make_v128_i8(128u,128u,0u,65u,128u,128u,0u,65u,128u,128u,0u,65u,128u,128u,0u,65u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u), make_v128_f32(3212836864u,3212836864u,3212836864u,3212836864u))->to_v128() == make_v128_i8(128u,128u,0u,193u,128u,128u,0u,193u,128u,128u,0u,193u,128u,128u,0u,193u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_f32(2139095040u,2139095040u,2139095040u,2139095040u))->to_v128() == make_v128_i8(1u,1u,129u,130u,1u,1u,129u,130u,1u,1u,129u,130u,1u,1u,129u,130u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_f32(4286578688u,4286578688u,4286578688u,4286578688u))->to_v128() == make_v128_i8(1u,1u,129u,2u,1u,1u,129u,2u,1u,1u,129u,2u,1u,1u,129u,2u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u), make_v128_f32(2143289344u,2143289344u,2143289344u,2143289344u))->to_v128() == make_v128_i8(1u,1u,65u,130u,1u,1u,65u,130u,1u,1u,65u,130u,1u,1u,65u,130u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,255u,254u,253u,252u,251u,250u,249u,248u,247u,246u,245u,244u,243u,242u,241u))->to_v128() == make_v128_i8(0u,2u,4u,6u,8u,10u,12u,14u,16u,18u,20u,22u,24u,26u,28u,30u));
   CHECK(bkend.call_with_return("env", "i8x16.sub", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,2u,4u,6u,8u,10u,12u,14u,16u,18u,20u,22u,24u,26u,28u,30u))->to_v128() == make_v128_i8(0u,255u,254u,253u,252u,251u,250u,249u,248u,247u,246u,245u,244u,243u,242u,241u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u,126u))->to_v128() == make_v128_i8(130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u,130u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.neg", make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u,1u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_1_wasm>", "[simd_i8x16_arith_1_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.1.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_2_wasm>", "[simd_i8x16_arith_2_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.2.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_3_wasm>", "[simd_i8x16_arith_3_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.3.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_4_wasm>", "[simd_i8x16_arith_4_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.4.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_5_wasm>", "[simd_i8x16_arith_5_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.5.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_6_wasm>", "[simd_i8x16_arith_6_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.6.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_7_wasm>", "[simd_i8x16_arith_7_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.7.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_8_wasm>", "[simd_i8x16_arith_8_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.8.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_arith_9_wasm>", "[simd_i8x16_arith_9_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_arith.9.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "add-sub", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,2u,4u,6u,8u,10u,12u,14u,16u,18u,20u,22u,24u,26u,28u,30u), make_v128_i8(0u,2u,4u,6u,8u,10u,12u,14u,16u,18u,20u,22u,24u,26u,28u,30u))->to_v128() == make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u));
   CHECK(bkend.call_with_return("env", "sub-add", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,2u,4u,6u,8u,10u,12u,14u,16u,18u,20u,22u,24u,26u,28u,30u), make_v128_i8(0u,2u,4u,6u,8u,10u,12u,14u,16u,18u,20u,22u,24u,26u,28u,30u))->to_v128() == make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u));
   CHECK(bkend.call_with_return("env", "add-neg", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "sub-neg", make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u), make_v128_i8(0u,1u,2u,3u,4u,5u,6u,7u,8u,9u,10u,11u,12u,13u,14u,15u))->to_v128() == make_v128_i8(0u,254u,252u,250u,248u,246u,244u,242u,240u,238u,236u,234u,232u,230u,228u,226u));
}

