// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_0_wasm>", "[simd_i16x8_arith_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(16383,16383,16383,16383,16383,16383,16383,16383), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(49153,49153,49153,49153,49153,49153,49153,49153), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(49151,49151,49151,49151,49151,49151,49151,49151), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32765,32765,32765,32765,32765,32765,32765,32765), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32766u,32766u,32766u,32766u,32766u,32766u,32766u,32766u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32766,32766,32766,32766,32766,32766,32766,32766), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32770,32770,32770,32770,32770,32770,32770,32770), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(32766u,32766u,32766u,32766u,32766u,32766u,32766u,32766u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(16383,16383,16383,16383,16383,16383,16383,16383), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(49153,49153,49153,49153,49153,49153,49153,49153), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49151,49151,49151,49151,49151,49151,49151,49151))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i8(0,128,0,128,0,128,0,128,0,128,0,128,0,128,0,128))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i32(2147516416,2147516416,2147516416,2147516416))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(0,0,0,0))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(2147483648,2147483648,2147483648,2147483648))->to_v128() == make_v128_i16(32768u,0u,32768u,0u,32768u,0u,32768u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(1065353216,1065353216,1065353216,1065353216))->to_v128() == make_v128_i16(32768u,49024u,32768u,49024u,32768u,49024u,32768u,49024u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(3212836864,3212836864,3212836864,3212836864))->to_v128() == make_v128_i16(32768u,16256u,32768u,16256u,32768u,16256u,32768u,16256u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(2139095040,2139095040,2139095040,2139095040))->to_v128() == make_v128_i16(1u,32641u,1u,32641u,1u,32641u,1u,32641u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(4286578688,4286578688,4286578688,4286578688))->to_v128() == make_v128_i16(1u,65409u,1u,65409u,1u,65409u,1u,65409u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(2143289344,2143289344,2143289344,2143289344))->to_v128() == make_v128_i16(1u,32705u,1u,32705u,1u,32705u,1u,32705u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,65535,65534,65533,65532,65531,65530,65529))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,2,4,6,8,10,12,14))->to_v128() == make_v128_i16(0u,3u,6u,9u,12u,15u,18u,21u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(12345,12345,12345,12345,12345,12345,12345,12345), make_v128_i16(56789,56789,56789,56789,56789,56789,56789,56789))->to_v128() == make_v128_i16(3598u,3598u,3598u,3598u,3598u,3598u,3598u,3598u));
   CHECK(bkend.call_with_return("env", "i16x8.add", make_v128_i16(4660,4660,4660,4660,4660,4660,4660,4660), make_v128_i16(22136,22136,22136,22136,22136,22136,22136,22136))->to_v128() == make_v128_i16(26796u,26796u,26796u,26796u,26796u,26796u,26796u,26796u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(16383,16383,16383,16383,16383,16383,16383,16383), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(49153,49153,49153,49153,49153,49153,49153,49153), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(49151,49151,49151,49151,49151,49151,49151,49151), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32765,32765,32765,32765,32765,32765,32765,32765), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32764u,32764u,32764u,32764u,32764u,32764u,32764u,32764u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32766,32766,32766,32766,32766,32766,32766,32766), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32765u,32765u,32765u,32765u,32765u,32765u,32765u,32765u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32770,32770,32770,32770,32770,32770,32770,32770), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32771u,32771u,32771u,32771u,32771u,32771u,32771u,32771u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32770u,32770u,32770u,32770u,32770u,32770u,32770u,32770u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(16383,16383,16383,16383,16383,16383,16383,16383), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(49153,49153,49153,49153,49153,49153,49153,49153), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49151,49151,49151,49151,49151,49151,49151,49151))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32766u,32766u,32766u,32766u,32766u,32766u,32766u,32766u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i8(0,128,0,128,0,128,0,128,0,128,0,128,0,128,0,128))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i16(2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i32(2147516416,2147516416,2147516416,2147516416))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i16(2u,2u,2u,2u,2u,2u,2u,2u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(0,0,0,0))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(2147483648,2147483648,2147483648,2147483648))->to_v128() == make_v128_i16(32768u,0u,32768u,0u,32768u,0u,32768u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(1065353216,1065353216,1065353216,1065353216))->to_v128() == make_v128_i16(32768u,16512u,32768u,16512u,32768u,16512u,32768u,16512u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(3212836864,3212836864,3212836864,3212836864))->to_v128() == make_v128_i16(32768u,49280u,32768u,49280u,32768u,49280u,32768u,49280u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(2139095040,2139095040,2139095040,2139095040))->to_v128() == make_v128_i16(1u,32897u,1u,32897u,1u,32897u,1u,32897u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(4286578688,4286578688,4286578688,4286578688))->to_v128() == make_v128_i16(1u,129u,1u,129u,1u,129u,1u,129u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(2143289344,2143289344,2143289344,2143289344))->to_v128() == make_v128_i16(1u,32833u,1u,32833u,1u,32833u,1u,32833u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,65535,65534,65533,65532,65531,65530,65529))->to_v128() == make_v128_i16(0u,2u,4u,6u,8u,10u,12u,14u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,2,4,6,8,10,12,14))->to_v128() == make_v128_i16(0u,65535u,65534u,65533u,65532u,65531u,65530u,65529u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(56789,56789,56789,56789,56789,56789,56789,56789), make_v128_i16(12345,12345,12345,12345,12345,12345,12345,12345))->to_v128() == make_v128_i16(44444u,44444u,44444u,44444u,44444u,44444u,44444u,44444u));
   CHECK(bkend.call_with_return("env", "i16x8.sub", make_v128_i16(22136,22136,22136,22136,22136,22136,22136,22136), make_v128_i16(4660,4660,4660,4660,4660,4660,4660,4660))->to_v128() == make_v128_i16(17476u,17476u,17476u,17476u,17476u,17476u,17476u,17476u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(0,0,0,0,0,0,0,0), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(16383,16383,16383,16383,16383,16383,16383,16383), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(49152u,49152u,49152u,49152u,49152u,49152u,49152u,49152u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(49153,49153,49153,49153,49153,49153,49153,49153), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(49152u,49152u,49152u,49152u,49152u,49152u,49152u,49152u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(49151,49151,49151,49151,49151,49151,49151,49151), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(16384u,16384u,16384u,16384u,16384u,16384u,16384u,16384u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32765,32765,32765,32765,32765,32765,32765,32765), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32765u,32765u,32765u,32765u,32765u,32765u,32765u,32765u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32766,32766,32766,32766,32766,32766,32766,32766), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32766u,32766u,32766u,32766u,32766u,32766u,32766u,32766u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32770,32770,32770,32770,32770,32770,32770,32770), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32766u,32766u,32766u,32766u,32766u,32766u,32766u,32766u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(16383,16383,16383,16383,16383,16383,16383,16383), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(49152u,49152u,49152u,49152u,49152u,49152u,49152u,49152u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384), make_v128_i16(16384,16384,16384,16384,16384,16384,16384,16384))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(49153,49153,49153,49153,49153,49153,49153,49153), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(49152u,49152u,49152u,49152u,49152u,49152u,49152u,49152u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(49152,49152,49152,49152,49152,49152,49152,49152), make_v128_i16(49151,49151,49151,49151,49151,49151,49151,49151))->to_v128() == make_v128_i16(16384u,16384u,16384u,16384u,16384u,16384u,16384u,16384u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(4096,4096,4096,4096,4096,4096,4096,4096), make_v128_i8(16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_i32(131074,131074,131074,131074))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(0,0,0,0))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(2147483648,2147483648,2147483648,2147483648))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(1065353216,1065353216,1065353216,1065353216))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768), make_v128_f32(3212836864,3212836864,3212836864,3212836864))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(2139095040,2139095040,2139095040,2139095040))->to_v128() == make_v128_i16(0u,32640u,0u,32640u,0u,32640u,0u,32640u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(4286578688,4286578688,4286578688,4286578688))->to_v128() == make_v128_i16(0u,65408u,0u,65408u,0u,65408u,0u,65408u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(1,1,1,1,1,1,1,1), make_v128_f32(2143289344,2143289344,2143289344,2143289344))->to_v128() == make_v128_i16(0u,32704u,0u,32704u,0u,32704u,0u,32704u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,65535,65534,65533,65532,65531,65530,65529))->to_v128() == make_v128_i16(0u,65535u,65532u,65527u,65520u,65511u,65500u,65487u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,2,4,6,8,10,12,14))->to_v128() == make_v128_i16(0u,2u,8u,18u,32u,50u,72u,98u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(12345,12345,12345,12345,12345,12345,12345,12345), make_v128_i16(56789,56789,56789,56789,56789,56789,56789,56789))->to_v128() == make_v128_i16(21613u,21613u,21613u,21613u,21613u,21613u,21613u,21613u));
   CHECK(bkend.call_with_return("env", "i16x8.mul", make_v128_i16(4660,4660,4660,4660,4660,4660,4660,4660), make_v128_i16(52719,52719,52719,52719,52719,52719,52719,52719))->to_v128() == make_v128_i16(41612u,41612u,41612u,41612u,41612u,41612u,41612u,41612u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32766,32766,32766,32766,32766,32766,32766,32766))->to_v128() == make_v128_i16(32770u,32770u,32770u,32770u,32770u,32770u,32770u,32770u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(1,1,1,1,1,1,1,1))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32769,32769,32769,32769,32769,32769,32769,32769))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32767,32767,32767,32767,32767,32767,32767,32767))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(32768,32768,32768,32768,32768,32768,32768,32768))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.neg", make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_1_wasm>", "[simd_i16x8_arith_1_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.1.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_10_wasm>", "[simd_i16x8_arith_10_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.10.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_11_wasm>", "[simd_i16x8_arith_11_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.11.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_12_wasm>", "[simd_i16x8_arith_12_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.12.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "add-sub", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,2,4,6,8,10,12,14), make_v128_i16(0,2,4,6,8,10,12,14))->to_v128() == make_v128_i16(0u,1u,2u,3u,4u,5u,6u,7u));
   CHECK(bkend.call_with_return("env", "mul-add", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(2,2,2,2,2,2,2,2))->to_v128() == make_v128_i16(0u,4u,8u,12u,16u,20u,24u,28u));
   CHECK(bkend.call_with_return("env", "mul-sub", make_v128_i16(0,2,4,6,8,10,12,14), make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,1,2,3,4,5,6,7))->to_v128() == make_v128_i16(0u,1u,4u,9u,16u,25u,36u,49u));
   CHECK(bkend.call_with_return("env", "sub-add", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,2,4,6,8,10,12,14), make_v128_i16(0,2,4,6,8,10,12,14))->to_v128() == make_v128_i16(0u,1u,2u,3u,4u,5u,6u,7u));
   CHECK(bkend.call_with_return("env", "add-neg", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,1,2,3,4,5,6,7))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "mul-neg", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(2,2,2,2,2,2,2,2))->to_v128() == make_v128_i16(0u,65534u,65532u,65530u,65528u,65526u,65524u,65522u));
   CHECK(bkend.call_with_return("env", "sub-neg", make_v128_i16(0,1,2,3,4,5,6,7), make_v128_i16(0,1,2,3,4,5,6,7))->to_v128() == make_v128_i16(0u,65534u,65532u,65530u,65528u,65526u,65524u,65522u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_2_wasm>", "[simd_i16x8_arith_2_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.2.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_3_wasm>", "[simd_i16x8_arith_3_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.3.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_4_wasm>", "[simd_i16x8_arith_4_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.4.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_5_wasm>", "[simd_i16x8_arith_5_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.5.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_6_wasm>", "[simd_i16x8_arith_6_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.6.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_7_wasm>", "[simd_i16x8_arith_7_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.7.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_8_wasm>", "[simd_i16x8_arith_8_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.8.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i16x8_arith_9_wasm>", "[simd_i16x8_arith_9_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i16x8_arith.9.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

