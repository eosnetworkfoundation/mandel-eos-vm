// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_0_wasm>", "[simd_i8x16_cmp_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,255,255,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,255,255,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(255,0,255,0,255,255,255,255,255,0,255,0,255,0,255,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(255,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0));
   CHECK(bkend.call_with_return("env", "eq", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,0,0,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,0,0,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(0,255,0,255,0,0,0,0,0,255,0,255,0,255,0,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(0,255,255,255,0,0,0,0,0,255,255,255,0,255,255,255));
   CHECK(bkend.call_with_return("env", "ne", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(0,0,0,255,255,255,0,255,0,255,0,0,0,255,255,255));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,255,255,255,0,0,0,0,0,255,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,255,255,255,0,0,0,0,0,255,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(0,255,0,255,0,0,0,0,0,0,0,0,0,255,0,255));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(0,255,255,255,0,0,0,0,0,0,0,0,0,255,255,255));
   CHECK(bkend.call_with_return("env", "lt_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,0,255,0,255,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(0,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "lt_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(0,0,0,255,255,255,0,255,0,255,0,0,0,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,255,255,255,255,255,0,0,0,255,0,0,0));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,255,255,255,255,255,0,0,0,255,0,0,0));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,0,255,0,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,0,0,0,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,0,255,0,255,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,0,0,0,255,255,255,255,255,255,0,0,0));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(255,255,255,0,0,0,0,255,255,255,255,255,255,0,0,0));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,0,255,0,255,0,255,0));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0));
   CHECK(bkend.call_with_return("env", "le_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(255,255,255,0,0,0,255,0,255,0,255,255,255,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,0,0,0,0,0,255,255,255,0,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,0,0,0,0,0,255,255,255,0,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,255,0,255,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,255,0,255,0,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,255,0,255,0,255,0,255));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,255,255,255,0,255,255,255));
   CHECK(bkend.call_with_return("env", "gt_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(255,255,255,0,0,0,255,0,255,0,255,255,255,0,0,0));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,0,0,0,255,255,255,255,255,0,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,0,0,0,255,255,255,255,255,0,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(255,0,255,0,255,255,255,255,255,255,255,255,255,0,255,0));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0));
   CHECK(bkend.call_with_return("env", "ge_s", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,195,0,0,254,194,0,0,128,191,0,0,0,0), make_v128_f32(3271557120,3271426048,3212836864,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,128,63,0,0,254,66,0,0,0,67,0,0,127,67), make_v128_f32(1065353216,1123942400,1124073472,1132396544))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15), make_v128_i8(240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,1,2,3,4,9,16,17,18,10,11,26,27,170,171,255), make_v128_i8(255,171,170,27,26,11,10,18,17,16,9,4,3,2,1,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,255,0,255,0,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,255,255,255,255,255,0,0,0,0,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i8(255,254,253,128,127,2,1,0,0,255,254,253,131,130,129,128))->to_v128() == make_v128_i8(0,0,0,255,255,255,255,255,255,0,0,0,0,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i16(65535,65535,65535,65535,65535,65535,65535,65535))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i16(0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i16(256,770,1284,1798,2312,2826,3340,3854))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i16(33152,33666,65277,255,256,32514,64896,65534))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i16(65408,65408,0,0,1,1,255,255))->to_v128() == make_v128_i8(255,0,255,0,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i16(43690,43690,43690,43690,43690,43690,43690,43690))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i32(4294967295,4294967295,4294967295,4294967295))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i32(0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i32(50462976,117835012,185207048,252579084))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,129,130,131,253,254,255,0,0,1,2,127,128,253,254,255), make_v128_i32(2206368128,16776957,2130837760,4294901120))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(128,128,128,128,0,0,0,0,1,1,1,1,255,255,255,255), make_v128_i32(4294967168,0,1,255))->to_v128() == make_v128_i8(255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "ge_u", make_v128_i8(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85), make_v128_i32(2863311530,2863311530,2863311530,2863311530))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_1_wasm>", "[simd_i8x16_cmp_1_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.1.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_10_wasm>", "[simd_i8x16_cmp_10_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.10.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_11_wasm>", "[simd_i8x16_cmp_11_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.11.wasm");
   backend_t bkend( code, &wa );

   CHECK(!bkend.call_with_return("env", "eq-in-block"));
   CHECK(!bkend.call_with_return("env", "ne-in-block"));
   CHECK(!bkend.call_with_return("env", "lt_s-in-block"));
   CHECK(!bkend.call_with_return("env", "le_u-in-block"));
   CHECK(!bkend.call_with_return("env", "gt_u-in-block"));
   CHECK(!bkend.call_with_return("env", "ge_s-in-block"));
   CHECK(!bkend.call_with_return("env", "nested-eq"));
   CHECK(!bkend.call_with_return("env", "nested-ne"));
   CHECK(!bkend.call_with_return("env", "nested-lt_s"));
   CHECK(!bkend.call_with_return("env", "nested-le_u"));
   CHECK(!bkend.call_with_return("env", "nested-gt_u"));
   CHECK(!bkend.call_with_return("env", "nested-ge_s"));
   CHECK(!bkend.call_with_return("env", "as-param"));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_12_wasm>", "[simd_i8x16_cmp_12_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.12.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_13_wasm>", "[simd_i8x16_cmp_13_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.13.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_14_wasm>", "[simd_i8x16_cmp_14_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.14.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_15_wasm>", "[simd_i8x16_cmp_15_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.15.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_16_wasm>", "[simd_i8x16_cmp_16_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.16.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_17_wasm>", "[simd_i8x16_cmp_17_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.17.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_18_wasm>", "[simd_i8x16_cmp_18_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.18.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_19_wasm>", "[simd_i8x16_cmp_19_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.19.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_2_wasm>", "[simd_i8x16_cmp_2_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.2.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_20_wasm>", "[simd_i8x16_cmp_20_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.20.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_21_wasm>", "[simd_i8x16_cmp_21_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.21.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_22_wasm>", "[simd_i8x16_cmp_22_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.22.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_23_wasm>", "[simd_i8x16_cmp_23_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.23.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_24_wasm>", "[simd_i8x16_cmp_24_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.24.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_25_wasm>", "[simd_i8x16_cmp_25_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.25.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_26_wasm>", "[simd_i8x16_cmp_26_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.26.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_27_wasm>", "[simd_i8x16_cmp_27_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.27.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_28_wasm>", "[simd_i8x16_cmp_28_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.28.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_29_wasm>", "[simd_i8x16_cmp_29_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.29.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_3_wasm>", "[simd_i8x16_cmp_3_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.3.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_30_wasm>", "[simd_i8x16_cmp_30_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.30.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_31_wasm>", "[simd_i8x16_cmp_31_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.31.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_4_wasm>", "[simd_i8x16_cmp_4_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.4.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_5_wasm>", "[simd_i8x16_cmp_5_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.5.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_6_wasm>", "[simd_i8x16_cmp_6_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.6.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_7_wasm>", "[simd_i8x16_cmp_7_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.7.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_8_wasm>", "[simd_i8x16_cmp_8_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.8.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_cmp_9_wasm>", "[simd_i8x16_cmp_9_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_cmp.9.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

