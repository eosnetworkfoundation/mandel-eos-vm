// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_0_wasm>", "[simd_conversions_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(0u,0u,0u,0u))->to_v128() == make_v128_f64(0u,0u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(2147483648u,2147483648u,2147483648u,2147483648u))->to_v128() == make_v128_f64(9223372036854775808u,9223372036854775808u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(1u,1u,1u,1u))->to_v128() == make_v128_f64(3936146074321813504u,3936146074321813504u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(2147483649u,2147483649u,2147483649u,2147483649u))->to_v128() == make_v128_f64(13159518111176589312u,13159518111176589312u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(1065353216u,1065353216u,1065353216u,1065353216u))->to_v128() == make_v128_f64(4607182418800017408u,4607182418800017408u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(3212836864u,3212836864u,3212836864u,3212836864u))->to_v128() == make_v128_f64(13830554455654793216u,13830554455654793216u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(4286578687u,4286578687u,4286578687u,4286578687u))->to_v128() == make_v128_f64(14407015207421345792u,14407015207421345792u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(2139095039u,2139095039u,2139095039u,2139095039u))->to_v128() == make_v128_f64(5183643170566569984u,5183643170566569984u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(67108864u,67108864u,67108864u,67108864u))->to_v128() == make_v128_f64(4071254063142928384u,4071254063142928384u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(2118632255u,2118632255u,2118632255u,2118632255u))->to_v128() == make_v128_f64(5172657297058430976u,5172657297058430976u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(2139095040u,2139095040u,2139095040u,2139095040u))->to_v128() == make_v128_f64(9218868437227405312u,9218868437227405312u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(4286578688u,4286578688u,4286578688u,4286578688u))->to_v128() == make_v128_f64(18442240474082181120u,18442240474082181120u));
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(2143289344u,2143289344u,2143289344u,2143289344u))->to_v128() == v128_matcher{nan_canonical_t{},nan_canonical_t{}});
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(2141192192u,2141192192u,2141192192u,2141192192u))->to_v128() == v128_matcher{nan_arithmetic_t{},nan_arithmetic_t{}});
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(4290772992u,4290772992u,4290772992u,4290772992u))->to_v128() == v128_matcher{nan_canonical_t{},nan_canonical_t{}});
   CHECK(bkend.call_with_return("env", "f64x2.promote_low_f32x4", make_v128_f32(4288675840u,4288675840u,4288675840u,4288675840u))->to_v128() == v128_matcher{nan_arithmetic_t{},nan_arithmetic_t{}});
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(0u,0u))->to_v128() == make_v128_f32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(9223372036854775808u,9223372036854775808u))->to_v128() == make_v128_f32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(1u,1u))->to_v128() == make_v128_f32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(9223372036854775809u,9223372036854775809u))->to_v128() == make_v128_f32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182418800017408u,4607182418800017408u))->to_v128() == make_v128_f32(1065353216u,1065353216u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(13830554455654793216u,13830554455654793216u))->to_v128() == make_v128_f32(3212836864u,3212836864u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4039728865214464000u,4039728865214464000u))->to_v128() == make_v128_f32(8388608u,8388608u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(13263100902069239808u,13263100902069239808u))->to_v128() == make_v128_f32(2155872256u,2155872256u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4039728865214463999u,4039728865214463999u))->to_v128() == make_v128_f32(8388607u,8388607u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(13263100902069239807u,13263100902069239807u))->to_v128() == make_v128_f32(2155872255u,2155872255u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(3936146074321813504u,3936146074321813504u))->to_v128() == make_v128_f32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(13159518111176589312u,13159518111176589312u))->to_v128() == make_v128_f32(2147483649u,2147483649u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(5183643170298134528u,5183643170298134528u))->to_v128() == make_v128_f32(2139095038u,2139095038u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(14407015207152910336u,14407015207152910336u))->to_v128() == make_v128_f32(4286578686u,4286578686u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(5183643170298134529u,5183643170298134529u))->to_v128() == make_v128_f32(2139095039u,2139095039u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(14407015207152910337u,14407015207152910337u))->to_v128() == make_v128_f32(4286578687u,4286578687u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(5183643170566569984u,5183643170566569984u))->to_v128() == make_v128_f32(2139095039u,2139095039u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(14407015207421345792u,14407015207421345792u))->to_v128() == make_v128_f32(4286578687u,4286578687u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(5183643170835005439u,5183643170835005439u))->to_v128() == make_v128_f32(2139095039u,2139095039u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(14407015207689781247u,14407015207689781247u))->to_v128() == make_v128_f32(4286578687u,4286578687u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(5183643170835005440u,5183643170835005440u))->to_v128() == make_v128_f32(2139095040u,2139095040u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(14407015207689781248u,14407015207689781248u))->to_v128() == make_v128_f32(4286578688u,4286578688u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4071254063142928384u,4071254063142928384u))->to_v128() == make_v128_f32(67108864u,67108864u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(5172657297058430976u,5172657297058430976u))->to_v128() == make_v128_f32(2118632255u,2118632255u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(9218868437227405312u,9218868437227405312u))->to_v128() == make_v128_f32(2139095040u,2139095040u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(18442240474082181120u,18442240474082181120u))->to_v128() == make_v128_f32(4286578688u,4286578688u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182418800017409u,4607182418800017409u))->to_v128() == make_v128_f32(1065353216u,1065353216u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182418800017407u,4607182418800017407u))->to_v128() == make_v128_f32(1065353216u,1065353216u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182419068452864u,4607182419068452864u))->to_v128() == make_v128_f32(1065353216u,1065353216u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182419068452865u,4607182419068452865u))->to_v128() == make_v128_f32(1065353217u,1065353217u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182419605323775u,4607182419605323775u))->to_v128() == make_v128_f32(1065353217u,1065353217u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182419605323776u,4607182419605323776u))->to_v128() == make_v128_f32(1065353218u,1065353218u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4607182420142194688u,4607182420142194688u))->to_v128() == make_v128_f32(1065353218u,1065353218u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4715268810125344768u,4715268810125344768u))->to_v128() == make_v128_f32(1266679808u,1266679808u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4715268810125344769u,4715268810125344769u))->to_v128() == make_v128_f32(1266679809u,1266679809u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4715268810662215679u,4715268810662215679u))->to_v128() == make_v128_f32(1266679809u,1266679809u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4715268810662215680u,4715268810662215680u))->to_v128() == make_v128_f32(1266679810u,1266679810u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(5094955347580439664u,5094955347580439664u))->to_v128() == make_v128_f32(1973901096u,1973901096u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4101111194527827589u,4101111194527827589u))->to_v128() == make_v128_f32(122722105u,122722105u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4038806939559600639u,4038806939559600639u))->to_v128() == make_v128_f32(7529997u,7529997u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(13836913116900734306u,13836913116900734306u))->to_v128() == make_v128_f32(3224680794u,3224680794u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(14338315240173327556u,14338315240173327556u))->to_v128() == make_v128_f32(4158615026u,4158615026u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(9221120237041090560u,9221120237041090560u))->to_v128() == v128_matcher{nan_canonical_t{},nan_canonical_t{},0u,0u});
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(9219994337134247936u,9219994337134247936u))->to_v128() == v128_matcher{nan_arithmetic_t{},nan_arithmetic_t{},0u,0u});
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(18444492273895866368u,18444492273895866368u))->to_v128() == v128_matcher{nan_canonical_t{},nan_canonical_t{},0u,0u});
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(18443366373989023744u,18443366373989023744u))->to_v128() == v128_matcher{nan_arithmetic_t{},nan_arithmetic_t{},0u,0u});
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(4503599627370496u,4503599627370496u))->to_v128() == make_v128_f32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(9227875636482146304u,9227875636482146304u))->to_v128() == make_v128_f32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(3931642474694443008u,3931642474694443008u))->to_v128() == make_v128_f32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(13155014511549218816u,13155014511549218816u))->to_v128() == make_v128_f32(2147483648u,2147483648u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(3931642474694443009u,3931642474694443009u))->to_v128() == make_v128_f32(1u,1u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.demote_f64x2_zero", make_v128_f64(13155014511549218817u,13155014511549218817u))->to_v128() == make_v128_f32(2147483649u,2147483649u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_f32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(1u,1u,1u,1u))->to_v128() == make_v128_f32(1065353216u,1065353216u,1065353216u,1065353216u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_f32(3212836864u,3212836864u,3212836864u,3212836864u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(2147483647u,2147483647u,2147483647u,2147483647u))->to_v128() == make_v128_f32(1325400064u,1325400064u,1325400064u,1325400064u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(2147483648u,2147483648u,2147483648u,2147483648u))->to_v128() == make_v128_f32(3472883712u,3472883712u,3472883712u,3472883712u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(1234567890u,1234567890u,1234567890u,1234567890u))->to_v128() == make_v128_f32(1318267910u,1318267910u,1318267910u,1318267910u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(123456792u,123456792u,123456792u,123456792u))->to_v128() == make_v128_f32(1290500515u,1290500515u,1290500515u,1290500515u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(305419904u,305419904u,305419904u,305419904u))->to_v128() == make_v128_f32(1301390004u,1301390004u,1301390004u,1301390004u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(16777217u,16777217u,16777217u,16777217u))->to_v128() == make_v128_f32(1266679808u,1266679808u,1266679808u,1266679808u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(4278190079u,4278190079u,4278190079u,4278190079u))->to_v128() == make_v128_f32(3414163456u,3414163456u,3414163456u,3414163456u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(16777219u,16777219u,16777219u,16777219u))->to_v128() == make_v128_f32(1266679810u,1266679810u,1266679810u,1266679810u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(4278190077u,4278190077u,4278190077u,4278190077u))->to_v128() == make_v128_f32(3414163458u,3414163458u,3414163458u,3414163458u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_s", make_v128_i32(0u,4294967295u,2147483647u,2147483648u))->to_v128() == make_v128_f32(0u,3212836864u,1325400064u,3472883712u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_f32(0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(1u,1u,1u,1u))->to_v128() == make_v128_f32(1065353216u,1065353216u,1065353216u,1065353216u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_f32(1333788672u,1333788672u,1333788672u,1333788672u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(2147483647u,2147483647u,2147483647u,2147483647u))->to_v128() == make_v128_f32(1325400064u,1325400064u,1325400064u,1325400064u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(2147483648u,2147483648u,2147483648u,2147483648u))->to_v128() == make_v128_f32(1325400064u,1325400064u,1325400064u,1325400064u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(305419896u,305419896u,305419896u,305419896u))->to_v128() == make_v128_f32(1301390004u,1301390004u,1301390004u,1301390004u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(2147483776u,2147483776u,2147483776u,2147483776u))->to_v128() == make_v128_f32(1325400064u,1325400064u,1325400064u,1325400064u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(2147483777u,2147483777u,2147483777u,2147483777u))->to_v128() == make_v128_f32(1325400065u,1325400065u,1325400065u,1325400065u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(2147483778u,2147483778u,2147483778u,2147483778u))->to_v128() == make_v128_f32(1325400065u,1325400065u,1325400065u,1325400065u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(4294966912u,4294966912u,4294966912u,4294966912u))->to_v128() == make_v128_f32(1333788670u,1333788670u,1333788670u,1333788670u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(4294966913u,4294966913u,4294966913u,4294966913u))->to_v128() == make_v128_f32(1333788671u,1333788671u,1333788671u,1333788671u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(4294966914u,4294966914u,4294966914u,4294966914u))->to_v128() == make_v128_f32(1333788671u,1333788671u,1333788671u,1333788671u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(123456792u,123456792u,123456792u,123456792u))->to_v128() == make_v128_f32(1290500515u,1290500515u,1290500515u,1290500515u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(2427178479u,2427178479u,2427178479u,2427178479u))->to_v128() == make_v128_f32(1326492622u,1326492622u,1326492622u,1326492622u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(16777217u,16777217u,16777217u,16777217u))->to_v128() == make_v128_f32(1266679808u,1266679808u,1266679808u,1266679808u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(16777219u,16777219u,16777219u,16777219u))->to_v128() == make_v128_f32(1266679810u,1266679810u,1266679810u,1266679810u));
   CHECK(bkend.call_with_return("env", "f32x4.convert_i32x4_u", make_v128_i32(0u,4294967295u,2147483647u,2147483648u))->to_v128() == make_v128_f32(0u,1333788672u,1325400064u,1325400064u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_s", make_v128_i32(1u,1u,0u,0u))->to_v128() == make_v128_f64(4607182418800017408u,4607182418800017408u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_s", make_v128_i32(4294967295u,4294967295u,0u,0u))->to_v128() == make_v128_f64(13830554455654793216u,13830554455654793216u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_s", make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_f64(0u,0u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_s", make_v128_i32(2147483647u,2147483647u,0u,0u))->to_v128() == make_v128_f64(4746794007244308480u,4746794007244308480u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_s", make_v128_i32(2147483648u,2147483648u,0u,0u))->to_v128() == make_v128_f64(13970166044103278592u,13970166044103278592u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_s", make_v128_i32(987654321u,987654321u,0u,0u))->to_v128() == make_v128_f64(4741568253304766464u,4741568253304766464u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_u", make_v128_i32(1u,1u,0u,0u))->to_v128() == make_v128_f64(4607182418800017408u,4607182418800017408u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_u", make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_f64(0u,0u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_u", make_v128_i32(2147483647u,2147483647u,0u,0u))->to_v128() == make_v128_f64(4746794007244308480u,4746794007244308480u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_u", make_v128_i32(2147483648u,2147483648u,0u,0u))->to_v128() == make_v128_f64(4746794007248502784u,4746794007248502784u));
   CHECK(bkend.call_with_return("env", "f64x2.convert_low_i32x4_u", make_v128_i32(4294967295u,4294967295u,0u,0u))->to_v128() == make_v128_f64(4751297606873776128u,4751297606873776128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u), make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u), make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(126u,126u,126u,126u,126u,126u,126u,126u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(126u,126u,126u,126u,126u,126u,126u,126u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,126u,126u,126u,126u,126u,126u,126u,126u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65409u,65409u,65409u,65409u,65409u,65409u,65409u,65409u), make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u))->to_v128() == make_v128_i8(129u,129u,129u,129u,129u,129u,129u,129u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u), make_v128_i16(65409u,65409u,65409u,65409u,65409u,65409u,65409u,65409u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,129u,129u,129u,129u,129u,129u,129u,129u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u), make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65407u,65407u,65407u,65407u,65407u,65407u,65407u,65407u), make_v128_i16(65407u,65407u,65407u,65407u,65407u,65407u,65407u,65407u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65407u,65407u,65407u,65407u,65407u,65407u,65407u,65407u), make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u), make_v128_i16(65407u,65407u,65407u,65407u,65407u,65407u,65407u,65407u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u), make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65407u,65407u,65407u,65407u,65407u,65407u,65407u,65407u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65408u,65408u,65408u,65408u,65408u,65408u,65408u,65408u), make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(65407u,65407u,65407u,65407u,65407u,65407u,65407u,65407u), make_v128_i16(256u,256u,256u,256u,256u,256u,256u,256u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(12345u,12345u,12345u,12345u,12345u,12345u,12345u,12345u), make_v128_i16(56789u,56789u,56789u,56789u,56789u,56789u,56789u,56789u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_s", make_v128_i16(4660u,4660u,4660u,4660u,4660u,4660u,4660u,4660u), make_v128_i16(22136u,22136u,22136u,22136u,22136u,22136u,22136u,22136u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u), make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(1u,1u,1u,1u,1u,1u,1u,1u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u), make_v128_i16(1u,1u,1u,1u,1u,1u,1u,1u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,1u,1u,1u,1u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(126u,126u,126u,126u,126u,126u,126u,126u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(126u,126u,126u,126u,126u,126u,126u,126u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(126u,126u,126u,126u,126u,126u,126u,126u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,126u,126u,126u,126u,126u,126u,126u,126u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u), make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u))->to_v128() == make_v128_i8(127u,127u,127u,127u,127u,127u,127u,127u,128u,128u,128u,128u,128u,128u,128u,128u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(128u,128u,128u,128u,128u,128u,128u,128u), make_v128_i16(127u,127u,127u,127u,127u,127u,127u,127u))->to_v128() == make_v128_i8(128u,128u,128u,128u,128u,128u,128u,128u,127u,127u,127u,127u,127u,127u,127u,127u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(254u,254u,254u,254u,254u,254u,254u,254u), make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(254u,254u,254u,254u,254u,254u,254u,254u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i16(254u,254u,254u,254u,254u,254u,254u,254u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,254u,254u,254u,254u,254u,254u,254u,254u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(256u,256u,256u,256u,256u,256u,256u,256u), make_v128_i16(256u,256u,256u,256u,256u,256u,256u,256u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u), make_v128_i16(256u,256u,256u,256u,256u,256u,256u,256u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(256u,256u,256u,256u,256u,256u,256u,256u), make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u), make_v128_i16(256u,256u,256u,256u,256u,256u,256u,256u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u), make_v128_i16(255u,255u,255u,255u,255u,255u,255u,255u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u), make_v128_i16(256u,256u,256u,256u,256u,256u,256u,256u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u), make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(56789u,56789u,56789u,56789u,56789u,56789u,56789u,56789u), make_v128_i16(12345u,12345u,12345u,12345u,12345u,12345u,12345u,12345u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i8x16.narrow_i16x8_u", make_v128_i16(37035u,37035u,37035u,37035u,37035u,37035u,37035u,37035u), make_v128_i16(4660u,4660u,4660u,4660u,4660u,4660u,4660u,4660u))->to_v128() == make_v128_i8(0u,0u,0u,0u,0u,0u,0u,0u,255u,255u,255u,255u,255u,255u,255u,255u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(0u,0u,0u,0u), make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(0u,0u,0u,0u), make_v128_i32(1u,1u,1u,1u))->to_v128() == make_v128_i16(0u,0u,0u,0u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(1u,1u,1u,1u), make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_i16(1u,1u,1u,1u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(0u,0u,0u,0u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i16(0u,0u,0u,0u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u), make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(1u,1u,1u,1u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i16(1u,1u,1u,1u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u), make_v128_i32(1u,1u,1u,1u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(32766u,32766u,32766u,32766u), make_v128_i32(32767u,32767u,32767u,32767u))->to_v128() == make_v128_i16(32766u,32766u,32766u,32766u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(32767u,32767u,32767u,32767u), make_v128_i32(32766u,32766u,32766u,32766u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32766u,32766u,32766u,32766u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(32767u,32767u,32767u,32767u), make_v128_i32(32767u,32767u,32767u,32767u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(32768u,32768u,32768u,32768u), make_v128_i32(32768u,32768u,32768u,32768u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(32767u,32767u,32767u,32767u), make_v128_i32(32768u,32768u,32768u,32768u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(32768u,32768u,32768u,32768u), make_v128_i32(32767u,32767u,32767u,32767u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(32767u,32767u,32767u,32767u), make_v128_i32(65535u,65535u,65535u,65535u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(65535u,65535u,65535u,65535u), make_v128_i32(32767u,32767u,32767u,32767u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934529u,4294934529u,4294934529u,4294934529u), make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u))->to_v128() == make_v128_i16(32769u,32769u,32769u,32769u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u), make_v128_i32(4294934529u,4294934529u,4294934529u,4294934529u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32769u,32769u,32769u,32769u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u), make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934527u,4294934527u,4294934527u,4294934527u), make_v128_i32(4294934527u,4294934527u,4294934527u,4294934527u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934527u,4294934527u,4294934527u,4294934527u), make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u), make_v128_i32(4294934527u,4294934527u,4294934527u,4294934527u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32768u,32768u,32768u,32768u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u), make_v128_i32(32767u,32767u,32767u,32767u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u), make_v128_i32(32768u,32768u,32768u,32768u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934527u,4294934527u,4294934527u,4294934527u), make_v128_i32(32767u,32767u,32767u,32767u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934528u,4294934528u,4294934528u,4294934528u), make_v128_i32(65535u,65535u,65535u,65535u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4294934527u,4294934527u,4294934527u,4294934527u), make_v128_i32(65536u,65536u,65536u,65536u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(4160749568u,4160749568u,4160749568u,4160749568u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(123456789u,123456789u,123456789u,123456789u), make_v128_i32(1234567890u,1234567890u,1234567890u,1234567890u))->to_v128() == make_v128_i16(32767u,32767u,32767u,32767u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_s", make_v128_i32(2427178479u,2427178479u,2427178479u,2427178479u), make_v128_i32(305419896u,305419896u,305419896u,305419896u))->to_v128() == make_v128_i16(32768u,32768u,32768u,32768u,32767u,32767u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(0u,0u,0u,0u), make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(0u,0u,0u,0u), make_v128_i32(1u,1u,1u,1u))->to_v128() == make_v128_i16(0u,0u,0u,0u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(1u,1u,1u,1u), make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_i16(1u,1u,1u,1u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(0u,0u,0u,0u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u), make_v128_i32(0u,0u,0u,0u))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(1u,1u,1u,1u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i16(1u,1u,1u,1u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u), make_v128_i32(1u,1u,1u,1u))->to_v128() == make_v128_i16(0u,0u,0u,0u,1u,1u,1u,1u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(65534u,65534u,65534u,65534u), make_v128_i32(65535u,65535u,65535u,65535u))->to_v128() == make_v128_i16(65534u,65534u,65534u,65534u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(65535u,65535u,65535u,65535u), make_v128_i32(65534u,65534u,65534u,65534u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65534u,65534u,65534u,65534u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(65535u,65535u,65535u,65535u), make_v128_i32(65535u,65535u,65535u,65535u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(65536u,65536u,65536u,65536u), make_v128_i32(65536u,65536u,65536u,65536u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(65535u,65535u,65535u,65535u), make_v128_i32(65536u,65536u,65536u,65536u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(65536u,65536u,65536u,65536u), make_v128_i32(65535u,65535u,65535u,65535u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(0u,0u,0u,0u), make_v128_i32(65535u,65535u,65535u,65535u))->to_v128() == make_v128_i16(0u,0u,0u,0u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(0u,0u,0u,0u), make_v128_i32(65536u,65536u,65536u,65536u))->to_v128() == make_v128_i16(0u,0u,0u,0u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u), make_v128_i32(65535u,65535u,65535u,65535u))->to_v128() == make_v128_i16(0u,0u,0u,0u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u), make_v128_i32(65536u,65536u,65536u,65536u))->to_v128() == make_v128_i16(0u,0u,0u,0u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(2147483648u,2147483648u,2147483648u,2147483648u), make_v128_i32(4294967295u,4294967295u,4294967295u,4294967295u))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(123456789u,123456789u,123456789u,123456789u), make_v128_i32(1234567890u,1234567890u,1234567890u,1234567890u))->to_v128() == make_v128_i16(65535u,65535u,65535u,65535u,65535u,65535u,65535u,65535u));
   CHECK(bkend.call_with_return("env", "i16x8.narrow_i32x4_u", make_v128_i32(2427178479u,2427178479u,2427178479u,2427178479u), make_v128_i32(305419896u,305419896u,305419896u,305419896u))->to_v128() == make_v128_i16(0u,0u,0u,0u,65535u,65535u,65535u,65535u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_31_wasm>", "[simd_conversions_31_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.31.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_32_wasm>", "[simd_conversions_32_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.32.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_33_wasm>", "[simd_conversions_33_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.33.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_34_wasm>", "[simd_conversions_34_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.34.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_35_wasm>", "[simd_conversions_35_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.35.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_36_wasm>", "[simd_conversions_36_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.36.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_37_wasm>", "[simd_conversions_37_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.37.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_38_wasm>", "[simd_conversions_38_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.38.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_39_wasm>", "[simd_conversions_39_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.39.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "f32x4_convert_i32x4_s_add", make_v128_i32(1u,2u,3u,4u), make_v128_i32(2u,3u,4u,5u))->to_v128() == make_v128_f32(1077936128u,1084227584u,1088421888u,1091567616u));
   CHECK(bkend.call_with_return("env", "f32x4_convert_i32x4_s_sub", make_v128_i32(0u,1u,2u,3u), make_v128_i32(1u,1u,1u,1u))->to_v128() == make_v128_f32(3212836864u,0u,1065353216u,1073741824u));
   CHECK(bkend.call_with_return("env", "f32x4_convert_i32x4_u_mul", make_v128_i32(1u,2u,3u,4u), make_v128_i32(1u,2u,3u,4u))->to_v128() == make_v128_f32(1065353216u,1082130432u,1091567616u,1098907648u));
   CHECK(bkend.call_with_return("env", "i16x8_low_extend_narrow_ss", make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u), make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u))->to_v128() == make_v128_i16(65408u,65408u,127u,65408u,65408u,65408u,127u,65408u));
   CHECK(bkend.call_with_return("env", "i16x8_low_extend_narrow_su", make_v128_i16(32768u,32769u,32767u,65535u,32768u,32769u,32767u,65535u), make_v128_i16(32768u,32769u,32767u,65535u,32768u,32769u,32767u,65535u))->to_v128() == make_v128_i16(0u,0u,65535u,0u,0u,0u,65535u,0u));
   CHECK(bkend.call_with_return("env", "i16x8_high_extend_narrow_ss", make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u), make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u))->to_v128() == make_v128_i16(65408u,65408u,127u,65408u,65408u,65408u,127u,65408u));
   CHECK(bkend.call_with_return("env", "i16x8_high_extend_narrow_su", make_v128_i16(32768u,32769u,32767u,65535u,32768u,32769u,32767u,65535u), make_v128_i16(32768u,32769u,32767u,65535u,32768u,32769u,32767u,65535u))->to_v128() == make_v128_i16(0u,0u,65535u,0u,0u,0u,65535u,0u));
   CHECK(bkend.call_with_return("env", "i16x8_low_extend_narrow_uu", make_v128_i16(32768u,32769u,32768u,65535u,32768u,32769u,32768u,65535u), make_v128_i16(32768u,32769u,32768u,65535u,32768u,32769u,32768u,65535u))->to_v128() == make_v128_i16(0u,0u,0u,0u,0u,0u,0u,0u));
   CHECK(bkend.call_with_return("env", "i16x8_low_extend_narrow_us", make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u), make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u))->to_v128() == make_v128_i16(128u,128u,127u,128u,128u,128u,127u,128u));
   CHECK(bkend.call_with_return("env", "i16x8_high_extend_narrow_uu", make_v128_i16(32768u,32769u,32767u,65535u,32768u,32769u,32767u,65535u), make_v128_i16(32768u,32769u,32767u,65535u,32768u,32769u,32767u,65535u))->to_v128() == make_v128_i16(0u,0u,255u,0u,0u,0u,255u,0u));
   CHECK(bkend.call_with_return("env", "i16x8_high_extend_narrow_us", make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u), make_v128_i16(32768u,32769u,32767u,32768u,32768u,32769u,32767u,32768u))->to_v128() == make_v128_i16(128u,128u,127u,128u,128u,128u,127u,128u));
   CHECK(bkend.call_with_return("env", "i32x4_low_extend_narrow_ss", make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u), make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u))->to_v128() == make_v128_i32(4294934528u,4294934528u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i32x4_low_extend_narrow_su", make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u), make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u))->to_v128() == make_v128_i32(0u,0u,4294967295u,0u));
   CHECK(bkend.call_with_return("env", "i32x4_high_extend_narrow_ss", make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u), make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u))->to_v128() == make_v128_i32(4294934528u,4294934528u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i32x4_high_extend_narrow_su", make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u), make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u))->to_v128() == make_v128_i32(0u,0u,4294967295u,0u));
   CHECK(bkend.call_with_return("env", "i32x4_low_extend_narrow_uu", make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u), make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u))->to_v128() == make_v128_i32(0u,0u,65535u,0u));
   CHECK(bkend.call_with_return("env", "i32x4_low_extend_narrow_us", make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u), make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u))->to_v128() == make_v128_i32(32768u,32768u,32767u,32767u));
   CHECK(bkend.call_with_return("env", "i32x4_high_extend_narrow_uu", make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u), make_v128_i32(2147483648u,2147483649u,2147483647u,4294967295u))->to_v128() == make_v128_i32(0u,0u,65535u,0u));
   CHECK(bkend.call_with_return("env", "i32x4_high_extend_narrow_us", make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u), make_v128_i32(2147483648u,2147483649u,2147483647u,134217728u))->to_v128() == make_v128_i32(32768u,32768u,32767u,32767u));
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_40_wasm>", "[simd_conversions_40_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.40.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_41_wasm>", "[simd_conversions_41_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.41.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_42_wasm>", "[simd_conversions_42_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.42.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_43_wasm>", "[simd_conversions_43_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.43.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_44_wasm>", "[simd_conversions_44_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.44.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_45_wasm>", "[simd_conversions_45_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.45.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_46_wasm>", "[simd_conversions_46_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.46.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_47_wasm>", "[simd_conversions_47_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.47.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_48_wasm>", "[simd_conversions_48_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.48.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_conversions_49_wasm>", "[simd_conversions_49_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_conversions.49.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

