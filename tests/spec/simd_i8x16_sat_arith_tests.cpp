// Generated by spec_test_generator.  DO NOT MODIFY THIS FILE.

#include <algorithm>
#include <vector>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdlib>
#include <catch2/catch.hpp>
#include <utils.hpp>
#include <wasm_config.hpp>
#include <eosio/vm/backend.hpp>

using namespace eosio;
using namespace eosio::vm;
extern wasm_allocator wa;

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_0_wasm>", "[simd_i8x16_sat_arith_0_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.0.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_f32(2147483648,2147483648,2147483648,2147483648))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2139095040,2139095040,2139095040,2139095040))->to_v128() == make_v128_i8(1,1,129,127,1,1,129,127,1,1,129,127,1,1,129,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4286578688,4286578688,4286578688,4286578688))->to_v128() == make_v128_i8(1,1,129,0,1,1,129,0,1,1,129,0,1,1,129,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2143289344,2143289344,2143289344,2143289344))->to_v128() == make_v128_i8(1,1,193,127,1,1,193,127,1,1,193,127,1,1,193,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4290772992,4290772992,4290772992,4290772992))->to_v128() == make_v128_i8(1,1,193,0,1,1,193,0,1,1,193,0,1,1,193,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30))->to_v128() == make_v128_i8(0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_f32(2147483648,2147483648,2147483648,2147483648))->to_v128() == make_v128_i8(128,128,128,255,128,128,128,255,128,128,128,255,128,128,128,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2139095040,2139095040,2139095040,2139095040))->to_v128() == make_v128_i8(1,1,129,128,1,1,129,128,1,1,129,128,1,1,129,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4286578688,4286578688,4286578688,4286578688))->to_v128() == make_v128_i8(1,1,129,255,1,1,129,255,1,1,129,255,1,1,129,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2143289344,2143289344,2143289344,2143289344))->to_v128() == make_v128_i8(1,1,193,128,1,1,193,128,1,1,193,128,1,1,193,128));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4290772992,4290772992,4290772992,4290772992))->to_v128() == make_v128_i8(1,1,193,255,1,1,193,255,1,1,193,255,1,1,193,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241))->to_v128() == make_v128_i8(0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.add_sat_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30))->to_v128() == make_v128_i8(0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_f32(2147483648,2147483648,2147483648,2147483648))->to_v128() == make_v128_i8(128,128,128,0,128,128,128,0,128,128,128,0,128,128,128,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2139095040,2139095040,2139095040,2139095040))->to_v128() == make_v128_i8(1,1,127,130,1,1,127,130,1,1,127,130,1,1,127,130));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4286578688,4286578688,4286578688,4286578688))->to_v128() == make_v128_i8(1,1,127,2,1,1,127,2,1,1,127,2,1,1,127,2));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2143289344,2143289344,2143289344,2143289344))->to_v128() == make_v128_i8(1,1,65,130,1,1,65,130,1,1,65,130,1,1,65,130));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4290772992,4290772992,4290772992,4290772992))->to_v128() == make_v128_i8(1,1,65,2,1,1,65,2,1,1,65,2,1,1,65,2));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241))->to_v128() == make_v128_i8(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_s", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30))->to_v128() == make_v128_i8(0,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192), make_v128_i8(191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_f32(2147483648,2147483648,2147483648,2147483648))->to_v128() == make_v128_i8(128,128,128,0,128,128,128,0,128,128,128,0,128,128,128,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2139095040,2139095040,2139095040,2139095040))->to_v128() == make_v128_i8(1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4286578688,4286578688,4286578688,4286578688))->to_v128() == make_v128_i8(1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(2143289344,2143289344,2143289344,2143289344))->to_v128() == make_v128_i8(1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), make_v128_f32(4290772992,4290772992,4290772992,4290772992))->to_v128() == make_v128_i8(1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,255,254,253,252,251,250,249,248,247,246,245,244,243,242,241))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
   CHECK(bkend.call_with_return("env", "i8x16.sub_sat_u", make_v128_i8(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15), make_v128_i8(0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30))->to_v128() == make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0));
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_13_wasm>", "[simd_i8x16_sat_arith_13_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.13.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_14_wasm>", "[simd_i8x16_sat_arith_14_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.14.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_15_wasm>", "[simd_i8x16_sat_arith_15_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.15.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_16_wasm>", "[simd_i8x16_sat_arith_16_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.16.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_17_wasm>", "[simd_i8x16_sat_arith_17_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.17.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_18_wasm>", "[simd_i8x16_sat_arith_18_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.18.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_19_wasm>", "[simd_i8x16_sat_arith_19_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.19.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_20_wasm>", "[simd_i8x16_sat_arith_20_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.20.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_21_wasm>", "[simd_i8x16_sat_arith_21_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.21.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_22_wasm>", "[simd_i8x16_sat_arith_22_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.22.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_23_wasm>", "[simd_i8x16_sat_arith_23_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.23.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_24_wasm>", "[simd_i8x16_sat_arith_24_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.24.wasm");
   CHECK_THROWS_AS(backend_t(code, nullptr), std::exception);
}

BACKEND_TEST_CASE( "Testing wasm <simd_i8x16_sat_arith_25_wasm>", "[simd_i8x16_sat_arith_25_wasm_tests]" ) {
   using backend_t = backend<standalone_function_t, TestType>;
   auto code = read_wasm( std::string(wasm_directory) + "simd_i8x16_sat_arith.25.wasm");
   backend_t bkend( code, &wa );

   CHECK(bkend.call_with_return("env", "sat-add_s-sub_s", make_v128_i8(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "sat-add_s-sub_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "sat-add_u-sub_s", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254));
   CHECK(bkend.call_with_return("env", "sat-add_u-sub_u", make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255), make_v128_i8(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "sat-add_s-neg", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "sat-add_u-neg", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255));
   CHECK(bkend.call_with_return("env", "sat-sub_s-neg", make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128), make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127))->to_v128() == make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128));
   CHECK(bkend.call_with_return("env", "sat-sub_u-neg", make_v128_i8(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127), make_v128_i8(128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128))->to_v128() == make_v128_i8(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1));
}

